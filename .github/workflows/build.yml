name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11.7"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        run: poetry install

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --exclude .venv --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --exclude .venv --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run:  poetry run coverage run -m pytest test/ --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
      - name: Define Job summary
        run: cat junit/github_job_summary.md >> $GITHUB_STEP_SUMMARY
        if: ${{ always() }}
      - name: Generate coverage HTML report
        run: poetry run coverage html --directory=htmlcov --include=src/*
        if: ${{ always() }}
      - name: Upload coverage HTML summary
        uses: actions/upload-artifact@v3
        with:
          name: coverage-htmlcov
          path: htmlcov
          retention-days: 7
        if: ${{ always() }}