{"coverage": 87.72563176895306, "raw_data": {"meta": {"version": "7.3.2", "timestamp": "2023-10-03T14:20:48.386637", "branch_coverage": false, "show_contexts": false}, "files": {"src/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "src/logger_setup.py": {"executed_lines": [1, 25, 26, 27, 30, 31, 34, 35, 36, 38, 39, 40, 41, 43, 46, 47, 48], "summary": {"covered_lines": 16, "num_statements": 16, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "src/mustrd.py": {"executed_lines": [1, 25, 26, 28, 29, 31, 32, 34, 35, 36, 38, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 106, 107, 108, 111, 112, 113, 116, 117, 118, 121, 122, 123, 126, 127, 128, 131, 132, 133, 136, 137, 138, 141, 142, 143, 146, 147, 148, 153, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 177, 188, 189, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 207, 209, 210, 211, 214, 216, 217, 218, 219, 224, 225, 226, 237, 240, 241, 243, 246, 248, 249, 252, 254, 260, 262, 268, 270, 276, 279, 290, 291, 292, 294, 295, 296, 316, 317, 318, 319, 322, 325, 326, 327, 329, 332, 335, 336, 337, 338, 339, 342, 343, 344, 345, 347, 350, 351, 352, 355, 359, 360, 364, 365, 366, 369, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 389, 395, 396, 398, 399, 403, 404, 405, 406, 407, 408, 412, 418, 420, 423, 424, 428, 429, 431, 432, 435, 436, 437, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 491, 492, 493, 498, 505, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 521, 522, 523, 525, 526, 528, 529, 530, 531, 534, 535, 536, 537, 540, 542, 543, 544, 545, 546, 547, 549, 551, 552, 554, 557, 559, 560, 563, 564, 565, 567, 568, 569, 571, 573, 574, 576, 577, 582, 588, 590, 591, 594, 595, 596, 597, 599, 600, 601, 606, 612, 614, 615, 617, 618, 619, 620, 622, 624, 625, 626, 627, 630, 631, 632, 633, 634, 635, 636, 637, 640, 661, 663, 664, 665, 666, 669, 671, 672, 673, 674, 676, 677, 678, 680, 681, 682, 684, 685, 686, 688, 690, 692, 693, 694, 695, 696, 697, 698, 701, 704, 705, 706, 708, 709, 710, 712, 713, 714, 716, 717, 720, 721, 722, 723, 724, 727, 728, 730, 731, 732, 734, 735, 736, 739, 740, 743, 747, 752, 753, 755, 756, 757, 758, 761, 763, 764, 768, 769, 772], "summary": {"covered_lines": 402, "num_statements": 478, "percent_covered": 84.10041841004184, "percent_covered_display": "84", "missing_lines": 76, "excluded_lines": 0}, "missing_lines": [169, 170, 171, 172, 173, 175, 220, 221, 227, 228, 230, 231, 233, 234, 235, 250, 280, 281, 282, 283, 284, 285, 286, 287, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 353, 354, 356, 357, 367, 368, 393, 394, 400, 401, 416, 417, 425, 426, 438, 516, 578, 579, 602, 603, 641, 656, 658, 762, 766, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789], "excluded_lines": []}, "src/mustrdAnzo.py": {"executed_lines": [1, 25, 26, 27, 28, 29, 33, 45, 53, 69, 87, 99, 119, 134, 148], "summary": {"covered_lines": 14, "num_statements": 76, "percent_covered": 18.42105263157895, "percent_covered_display": "18", "missing_lines": 62, "excluded_lines": 0}, "missing_lines": [34, 35, 36, 37, 38, 39, 40, 42, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 65, 66, 70, 71, 72, 73, 74, 76, 77, 82, 83, 88, 89, 91, 95, 96, 100, 109, 112, 113, 114, 115, 120, 128, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 149, 150, 151, 152, 154, 155, 156], "excluded_lines": []}, "src/mustrdGraphDb.py": {"executed_lines": [1, 25, 26, 27, 28, 32, 46, 64, 68, 73, 78, 84, 97, 114], "summary": {"covered_lines": 13, "num_statements": 59, "percent_covered": 22.033898305084747, "percent_covered_display": "22", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 47, 48, 49, 50, 51, 52, 56, 60, 61, 65, 69, 70, 74, 75, 79, 80, 81, 85, 86, 87, 93, 94, 98, 102, 103, 104, 110, 111, 115, 116, 117, 118, 119, 120, 122, 128], "excluded_lines": []}, "src/mustrdRdfLib.py": {"executed_lines": [1, 25, 26, 27, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54], "summary": {"covered_lines": 20, "num_statements": 26, "percent_covered": 76.92307692307692, "percent_covered_display": "77", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [35, 36, 44, 45, 55, 56], "excluded_lines": []}, "src/namespace.py": {"executed_lines": [1, 25, 26, 29, 30, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 77, 78, 79, 80, 81, 82, 85, 86, 89, 90, 91, 92, 93, 94, 95, 98, 99], "summary": {"covered_lines": 57, "num_statements": 57, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "src/spec_component.py": {"executed_lines": [1, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 46, 47, 48, 51, 52, 53, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 90, 92, 93, 94, 95, 96, 97, 100, 108, 112, 115, 117, 120, 121, 126, 129, 130, 131, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 178, 179, 180, 184, 185, 188, 189, 190, 191, 193, 194, 195, 198, 201, 202, 203, 204, 207, 208, 209, 211, 214, 215, 216, 220, 223, 224, 225, 227, 230, 231, 233, 235, 238, 239, 240, 242, 244, 246, 249, 250, 251, 254, 255, 256, 257, 258, 260, 261, 265, 266, 267, 268, 269, 272, 273, 276, 277, 278, 280, 282, 283, 284, 285, 289, 292, 293, 294, 296, 298, 299, 300, 302, 304, 307, 308, 309, 311, 313, 314, 315, 318, 319, 320, 323, 327, 328, 331, 335, 336, 337, 338, 350, 351, 352, 354, 356, 358, 361, 362, 363, 364, 367, 368, 369, 371, 374, 375, 376, 377, 379, 382, 385, 386, 387, 406, 407, 428, 429, 430, 435, 436, 437, 438, 439, 440, 441, 445, 448, 449, 450, 453, 454, 455, 456, 458, 460, 463, 467, 470, 471, 472, 473, 474, 477, 480, 497, 498, 501, 504, 523, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 547, 548, 550, 551, 553, 556, 558, 559, 561, 562, 564, 565, 566, 567, 570, 571, 596, 597], "summary": {"covered_lines": 278, "num_statements": 313, "percent_covered": 88.81789137380191, "percent_covered_display": "89", "missing_lines": 35, "excluded_lines": 0}, "missing_lines": [123, 153, 174, 217, 218, 219, 262, 263, 270, 271, 286, 287, 288, 339, 342, 345, 347, 388, 390, 392, 394, 396, 401, 403, 408, 411, 412, 414, 416, 421, 423, 425, 443, 459, 468], "excluded_lines": []}, "src/triple_store_dispatch.py": {"executed_lines": [1, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 48, 51, 52, 53, 56, 57, 61, 62, 66, 67, 71, 72, 73, 74, 77, 80, 81, 82, 85, 86, 90, 91, 95, 96, 100, 101, 102, 103, 106, 109, 110, 111, 114, 115, 119, 120, 121], "summary": {"covered_lines": 54, "num_statements": 61, "percent_covered": 88.52459016393442, "percent_covered_display": "89", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [58, 63, 68, 87, 92, 97, 116], "excluded_lines": []}, "src/utils.py": {"executed_lines": [1, 25, 29, 30], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "test/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "test/graph_util.py": {"executed_lines": [1, 25, 28], "summary": {"covered_lines": 2, "num_statements": 10, "percent_covered": 20.0, "percent_covered_display": "20", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [29, 30, 31, 32, 33, 34, 35, 36], "excluded_lines": []}, "test/test_construct_spec.py": {"executed_lines": [1, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 41, 42, 47, 49, 50, 51, 52, 55, 56, 69, 71, 73, 79, 81, 82, 83, 85, 86, 87, 88, 91, 92, 105, 107, 109, 115, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 132, 135, 139, 140, 144, 145, 147, 150, 151, 152, 167, 169, 171, 177, 180, 181, 182, 184, 185, 189, 190, 192, 195, 196, 197, 212, 214, 216, 222, 225, 226, 228, 229, 231, 232, 234, 235, 236, 237, 240, 243, 247, 248, 249, 250, 253, 254, 255, 264, 266, 268, 274, 277, 278, 279, 281, 282, 283, 284, 287, 288, 298, 300, 302, 308, 310, 311, 313, 315, 316, 318, 319, 320, 321, 324, 327, 331, 332, 333, 334, 337, 338, 339, 354, 356, 358, 364, 367, 368, 370, 371, 373, 375, 376, 377, 378, 381, 384, 388, 389, 394, 395, 397, 400, 401, 420, 422, 424, 430, 432, 433, 434, 436, 437, 442, 443, 445, 448, 449, 464, 466, 468, 474, 476, 477, 479, 481, 482, 484, 485, 486, 487, 490, 493, 497, 498, 499, 500, 501, 502, 516, 518, 520, 526, 528, 529, 530, 531, 536, 537, 538, 540, 541, 542, 543, 545, 546, 559, 561, 563, 569, 571, 572, 573, 575, 576, 577, 578, 579, 581, 582, 604, 606, 608, 614, 620, 623, 624, 625, 627, 628, 629, 631, 632, 634, 635, 651, 653, 655, 661, 667, 669, 670, 671], "summary": {"covered_lines": 241, "num_statements": 247, "percent_covered": 97.57085020242916, "percent_covered_display": "98", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [137, 245, 329, 386, 495, 534], "excluded_lines": []}, "test/test_general.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 10, 11, 13, 15, 16, 17, 19, 22, 23, 44, 45, 47, 49, 50, 52, 54, 56, 57, 59, 61, 62, 63, 64, 65, 66, 68, 69, 72], "summary": {"covered_lines": 34, "num_statements": 35, "percent_covered": 97.14285714285714, "percent_covered_display": "97", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [73], "excluded_lines": []}, "test/test_run_specs.py": {"executed_lines": [1, 24, 25, 26, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51], "summary": {"covered_lines": 22, "num_statements": 22, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "test/test_select_spec.py": {"executed_lines": [1, 25, 27, 28, 29, 31, 33, 35, 36, 37, 39, 42, 43, 48, 50, 51, 52, 53, 56, 57, 74, 76, 78, 84, 86, 87, 88, 90, 91, 92, 93, 96, 97, 119, 121, 123, 129, 131, 132, 133, 134, 135, 141, 142, 146, 147, 149, 152, 153, 175, 177, 179, 185, 187, 188, 189, 190, 191, 197, 198, 202, 203, 205, 208, 209, 231, 233, 235, 241, 243, 244, 245, 246, 247, 253, 254, 255, 256, 257, 258, 272, 274, 276, 282, 284, 285, 286, 287, 292, 293, 297, 298, 300, 303, 304, 305, 327, 329, 331, 337, 340, 341, 342, 344, 345, 349, 350, 352, 355, 357, 358, 380, 382, 384, 390, 393, 394, 395, 396, 397, 403, 404, 405, 406, 409, 410, 419, 421, 423, 429, 431, 432, 433, 435, 436, 437, 438, 441, 442, 451, 453, 455, 461, 463, 464, 465, 466, 467, 468, 474, 475, 476, 477, 480, 481, 503, 505, 507, 513, 515, 516, 517, 518, 519, 520, 526, 527, 531, 532, 534, 537, 538, 539, 561, 563, 565, 571, 574, 575, 576, 578, 579, 583, 584, 586, 589, 590, 591, 606, 608, 610, 616, 619, 620, 621, 622, 623, 624, 630, 631, 635, 636, 638, 641, 642, 675, 677, 679, 685, 687, 688, 689, 691, 692, 693, 694, 697, 698, 716, 718, 720, 726, 728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 744, 747, 748, 770, 772, 774, 780, 782, 783, 784, 785, 786, 787, 788, 789, 795, 796, 797, 798, 801, 802, 820, 822, 824, 830, 832, 833, 834, 835, 836, 837, 838, 839, 845, 905, 906, 907, 908, 911, 912, 946, 948, 950, 956, 958, 959, 960, 961, 962, 963, 964, 965, 971, 972, 978, 979, 981, 984, 985, 1019, 1021, 1023, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1046, 1047, 1052, 1053, 1055, 1058, 1059, 1078, 1080, 1082, 1088, 1090, 1091, 1092, 1094, 1095, 1100, 1101, 1103, 1107, 1108, 1127, 1129, 1131, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1151, 1152, 1153, 1154, 1157, 1158, 1180, 1182, 1184, 1190, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1205, 1206, 1210, 1211, 1213, 1216, 1217, 1234, 1236, 1238, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1261, 1262, 1266, 1267, 1269, 1272, 1273, 1290, 1292, 1294, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1317, 1318, 1323, 1324, 1326, 1329, 1330, 1353, 1355, 1357, 1363, 1366, 1367, 1368, 1370, 1371, 1376, 1377, 1379, 1382, 1383, 1406, 1408, 1409, 1411, 1417, 1420, 1421, 1422, 1424, 1425, 1430, 1431, 1433, 1436, 1437, 1460, 1462, 1464, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1487, 1488, 1493, 1494, 1496, 1499, 1500, 1521, 1523, 1525, 1531, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1548, 1549, 1554, 1555, 1557, 1560, 1561, 1583, 1585, 1587, 1593, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1610, 1611, 1616, 1617, 1619, 1622, 1623, 1645, 1647, 1649, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1682, 1683, 1693, 1695, 1697, 1703, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1720, 1721, 1731, 1733, 1735, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1749], "summary": {"covered_lines": 534, "num_statements": 575, "percent_covered": 92.8695652173913, "percent_covered_display": "93", "missing_lines": 41, "excluded_lines": 0}, "missing_lines": [139, 195, 251, 290, 401, 472, 524, 628, 739, 793, 843, 846, 851, 852, 854, 857, 858, 880, 882, 884, 890, 892, 893, 894, 895, 896, 897, 898, 899, 903, 969, 1044, 1149, 1203, 1259, 1315, 1485, 1546, 1608, 1669, 1753], "excluded_lines": []}, "test/test_spec.py": {"executed_lines": [1, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 41, 42, 47, 52, 54, 55, 56, 68, 70, 72, 73, 79, 80, 81, 91, 93, 95, 96, 102, 103, 104, 114, 116, 118, 119, 125, 126, 127, 137, 139, 141, 142, 148, 149, 150, 160, 162, 164, 165, 171, 172, 173, 183, 185, 187, 188, 194, 195, 196, 198, 199, 209, 211, 213, 219, 220, 222, 223, 225, 226, 227, 244, 246, 248, 249, 254, 257, 296, 297, 298, 300, 301, 313, 315, 317, 323, 329, 331, 332, 333], "summary": {"covered_lines": 91, "num_statements": 103, "percent_covered": 88.3495145631068, "percent_covered_display": "88", "missing_lines": 12, "excluded_lines": 0}, "missing_lines": [258, 259, 261, 262, 274, 276, 278, 284, 290, 292, 293, 294], "excluded_lines": []}, "test/test_spec_parser.py": {"executed_lines": [1, 25, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 68, 69, 92, 93, 94, 95, 101, 103, 107, 108, 110, 111, 113, 114, 115, 117, 123, 125, 126, 128, 129, 130, 131, 137, 142, 143, 144, 146, 147, 148, 149, 155, 157, 158, 160, 161, 162, 164, 170, 172, 173, 175, 176], "summary": {"covered_lines": 55, "num_statements": 55, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "test/test_update_spec.py": {"executed_lines": [1, 25, 26, 27, 29, 30, 31, 32, 34, 37, 38, 43, 45, 46, 47, 48, 51, 52, 69, 71, 73, 79, 81, 82, 84, 85, 86, 87, 90, 91, 100, 102, 104, 110, 112, 113, 115, 116, 117, 118, 121, 122, 139, 141, 143, 149, 151, 152, 154, 155, 156, 157, 160, 161, 170, 172, 174, 180, 182, 183, 185, 186, 187, 188, 191, 192, 205, 207, 209, 215, 217, 218, 220, 221, 222, 223, 226, 227, 244, 246, 248, 254, 256, 258, 259, 261, 262, 264, 265, 266, 267, 270, 273, 277, 278, 279, 280, 283, 284, 293, 295, 297, 303, 305, 307, 309, 310, 312, 313, 314, 315, 318, 321, 325, 326, 327, 328, 331, 332, 345, 347, 349, 355, 357, 359, 361, 362, 364, 365, 366, 367, 370, 373, 377, 378, 379, 380, 383, 384, 397, 399, 401, 407, 409, 411, 412, 414, 416, 417, 418, 419, 422, 425, 429, 430, 431, 432, 435, 436, 449, 451, 453, 459, 461, 463, 464, 466, 467, 469, 470, 471, 472, 475, 478, 482, 483, 488, 489, 491, 494, 496, 497, 524, 526, 528, 534, 536, 537, 539, 540, 544, 545, 547, 550, 551, 552, 573, 575, 577, 583, 585, 586, 588, 589, 590, 591, 592, 593, 607, 609, 611, 617, 619, 620, 621, 626, 627, 632, 633, 635, 638, 639, 659, 661, 663, 669, 671, 672, 674, 675, 676, 677, 678, 681, 682, 699, 701, 703, 709, 710, 711, 712, 713], "summary": {"covered_lines": 242, "num_statements": 248, "percent_covered": 97.58064516129032, "percent_covered_display": "98", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [275, 323, 375, 427, 480, 624], "excluded_lines": []}, "test/unit_test.py": {"executed_lines": [1, 2, 3, 5, 6, 8, 9, 12, 13, 15, 16, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 66, 77, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 152, 153, 154, 155], "summary": {"covered_lines": 109, "num_statements": 109, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}}, "totals": {"covered_lines": 2187, "num_statements": 2493, "percent_covered": 87.72563176895306, "percent_covered_display": "88", "missing_lines": 306, "excluded_lines": 0}}, "coverage_path": "."}